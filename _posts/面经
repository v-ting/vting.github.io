##1
#this 为直接调用者
严格模式下 自执行为undefine 非严格模式下 自执行为window 

#原型链
终点不为Object.prototype 因为还得取它的原型 为null

#localStore SessionStore
用户信息若需要记住密码则存在localStore 敏感账号便存在SessionStore

#js实现异步
1.回调函数 callback()
2.事件监听 fn.on()
3.发布和订阅
4.Promise

#定位有哪些
#static
position属性的默认值,块级元素和行内元素按照各自的特性进行显示。
#relative
相对定位,保留原来位置,根据top、left、buttom、right来进行相对于父元素的偏移
#absolute
绝对定位,脱离文档流,不占用原来位置(区别于float),变成块元素，可设置宽高,根据top、left、buttom、right来进行(相对于相邻标识了position不为static的元素)偏移
#fixed
类似absolute,但是相对于浏览器窗口进行偏移

#盒子内实现居中(无宽高)
1.flex
justify-content: center;
align-items: center;
2.position
position: absolute;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);

#setInterval setTimeout
返回值为数字 每次返回会递增
清楚定时器需要用到每个对应的数字

#圣杯布局的三种实现
1.浮动
左右各左右浮动
2.flex
3.定位
子绝父相 设置宽度以及top left等

--------------------

##2
#http请求包括了请求报文+响应报文
请求报文包括了请求行、请求头、请求数据、空行
请求行包括了方法字段、URL、HTTP协议版本
请求头包括了(键值对形式)产生请求的浏览器类型、客户端可识别的内容类型列表、主机地址
请求数据是post方法中，会把数据以key value形式发送请求
空行是发送回车符和换行符，通知服务器以下不再有请求头
响应报文包括了状态行、消息报头、响应正文

#call apply都会将第一个对象参数传入参数列表

#map set
map键值对 键名不重复会覆盖 可用undefined null当键名
set 键值相同 但是不储存键 不能单独取值 只能遍历取

(外文件)
#axios二次封装
#请求和响应拦截
#token
token是不存储用户信息的，通过自己的私钥和登录后的id加上加密算法
token一般存在vuex、localstore 发送请求时携带在headers


#cli3创建项目的各个文件
1.build文件夹：存放webpack的相关配置以及脚本文件，在实际开发过程中只会偶尔用到webpack.base.conf.js，配置less、babel等编译器
2.config文件夹：常用到此文件夹下config.js（index.js）配置开发环境的 端口号、是否开启热加载或者
设置生产环境的静态资源相对路径、是否开启gzip压缩、npm run build 命令打包生成静态资源的名称和路径等。
3. node_modules：存放npm install命令下载的开发环境和生产环境的各种依赖
4.src文件：工程项目的源码以及资源，包括页面图片、路由组件、路由配置、vuex、入口文件等

#-webkit、-ms、-moz
-moz代表firefox浏览器私有属性
-ms代表ie浏览器私有属性
-webkit代表safari、chrome私有属性
